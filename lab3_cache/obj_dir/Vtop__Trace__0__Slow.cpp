// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Tracing implementation internals
#include "verilated_fst_c.h"
#include "Vtop__Syms.h"


VL_ATTR_COLD void Vtop___024root__trace_init_sub__TOP__0(Vtop___024root* vlSelf, VerilatedFst* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    Vtop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtop___024root__trace_init_sub__TOP__0\n"); );
    // Init
    const int c = vlSymsp->__Vm_baseCode;
    // Body
    tracep->declBit(c+181,"clk",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+182,"linetrace",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->pushNamePrefix("top ");
    tracep->declBit(c+181,"clk",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+182,"linetrace",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+183,"reset",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+185,"memreq_val",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+186,"memreq_rdy",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declArray(c+1,"memreq_msg",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 76,0);
    tracep->declBit(c+187,"memresp_val",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+188,"memresp_rdy",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declQuad(c+31,"memresp_msg",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 46,0);
    tracep->declBit(c+189,"cache_req_val",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+190,"cache_req_rdy",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declArray(c+33,"cache_req_msg",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 76,0);
    tracep->declBit(c+191,"cache_resp_val",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+192,"cache_resp_rdy",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declQuad(c+4,"cache_resp_msg",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 46,0);
    tracep->declBit(c+6,"flush",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+84,"all_flushed",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+7,"flush_done",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+85,"tarray0_match",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+86,"tarray1_match",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+87,"line0_dirty",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+88,"line1_dirty",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+89,"line0_valid",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+90,"line1_valid",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+91,"incoming_mem_type",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+92,"req_count_done",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+93,"resp_count_done",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+94,"flush_way_sel",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+8,"input_en",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+9,"tarray_en",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+10,"tarray_wen",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+11,"req_count_en",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+12,"resp_count_en",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+13,"count_reset",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+14,"write_data_sel",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+15,"darray_en",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+16,"darray_wen",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+17,"index_sel",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+18,"write_word_sel",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+19,"read_word_sel",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+20,"mem_action",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+21,"way_select",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+22,"clean_set",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+23,"dirty_set",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+24,"valid_set",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBus(c+25,"state",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 2,0);
    tracep->declBus(c+193,"y",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+194,"n",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+194,"r",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+193,"w",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+194,"dc",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+194,"OFF",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+193,"REFILL",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+193,"EVICT",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+194,"IDX",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+193,"FLUSH",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+194,"PROC",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+193,"IMEM",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 0,0);
    tracep->declBus(c+195,"ID",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+196,"MT",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+197,"E0",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+198,"R0",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+199,"MD",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+200,"FL",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+195,"READ",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+196,"WRITE",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+195,"DCMEM",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->pushNamePrefix("DUT ");
    tracep->declBit(c+181,"clk",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+183,"reset",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declArray(c+1,"memreq_msg",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 76,0);
    tracep->declQuad(c+31,"memresp_msg",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 46,0);
    tracep->declArray(c+33,"cache_req_msg",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 76,0);
    tracep->declQuad(c+4,"cache_resp_msg",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 46,0);
    tracep->declBit(c+6,"flush",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+84,"all_flushed",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+7,"flush_done",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+85,"tarray0_match",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+86,"tarray1_match",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+87,"line0_dirty",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+88,"line1_dirty",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+89,"line0_valid",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+90,"line1_valid",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+91,"incoming_mem_type",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+92,"req_count_done",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+93,"resp_count_done",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+94,"flush_way_sel",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+8,"input_en",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+9,"tarray_en",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+10,"tarray_wen",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+11,"req_count_en",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+12,"resp_count_en",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+13,"count_reset",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+14,"write_data_sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+15,"darray_en",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+16,"darray_wen",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+17,"index_sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+18,"write_word_sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+19,"read_word_sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+20,"mem_action",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+21,"way_select",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+22,"clean_set",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+23,"dirty_set",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+24,"valid_set",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+25,"state",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 2,0);
    tracep->declBus(c+195,"ID",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+196,"MT",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+197,"E0",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+198,"R0",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+199,"MD",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+200,"FL",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 2,0);
    tracep->declBus(c+95,"address",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+96,"proc_write_data",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declArray(c+97,"incoming_msg",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 76,0);
    tracep->declBus(c+100,"incoming_tag",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 20,0);
    tracep->declBus(c+101,"incoming_index",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 4,0);
    tracep->declBus(c+102,"incoming_word_offset",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 3,0);
    for (int i = 0; i < 32; ++i) {
        tracep->declBus(c+103+i*1,"tag0",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, true,(i+0), 20,0);
    }
    for (int i = 0; i < 32; ++i) {
        tracep->declBus(c+135+i*1,"tag1",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, true,(i+0), 20,0);
    }
    tracep->declBus(c+36,"mem_req_tag",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 20,0);
    tracep->declBus(c+37,"d_index",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 4,0);
    tracep->declBus(c+38,"write_word_offset",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 3,0);
    tracep->declBus(c+39,"write_data",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+167,"flush_index",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 4,0);
    tracep->declBus(c+40,"read_word_offset",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 3,0);
    tracep->declBus(c+26,"mem_resp_data",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+41,"word0_out_lower",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+42,"word0_out_upper",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+43,"data0_word_mux_out",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+44,"word1_out_lower",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+45,"word1_out_upper",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+46,"data1_word_mux_out",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+47,"way_data_out",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+48,"cache_data_out",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+168,"req_inc_out",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 4,0);
    tracep->declBus(c+169,"req_word",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 4,0);
    tracep->declBus(c+170,"resp_inc_out",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 4,0);
    tracep->declBus(c+171,"resp_word",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 4,0);
    tracep->declBus(c+172,"dirty0",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+173,"dirty1",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+174,"valid0",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+175,"valid1",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBus(c+49,"req_addr_mem",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 31,0);
    tracep->declBit(c+94,"all0_flushed",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBit(c+176,"all1_flushed",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1);
    tracep->declBus(c+177,"flush0_index",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 4,0);
    tracep->declBus(c+178,"flush1_index",-1, FST_VD_IMPLICIT,FST_VT_SV_LOGIC, false,-1, 4,0);
    tracep->pushNamePrefix("dirty_mux ");
    tracep->declBus(c+201,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+177,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBus(c+178,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBit(c+94,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+167,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("index_mux ");
    tracep->declBus(c+201,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+101,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBus(c+167,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBit(c+17,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+37,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("mem_msg_reg ");
    tracep->declBus(c+202,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+203,"p_reset_value",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBit(c+181,"clk",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+183,"reset",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declArray(c+97,"q",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 76,0);
    tracep->declArray(c+1,"d",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 76,0);
    tracep->declBit(c+8,"en",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("read_data_word_mux ");
    tracep->declBus(c+204,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+102,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 3,0);
    tracep->declBus(c+179,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 3,0);
    tracep->declBit(c+19,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+40,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 3,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("req_count_reg ");
    tracep->declBus(c+201,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+203,"p_reset_value",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBit(c+181,"clk",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+13,"reset",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+169,"q",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBus(c+168,"d",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBit(c+11,"en",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("req_incrementer ");
    tracep->declBus(c+201,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+205,"p_inc_value",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+169,"in",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBus(c+168,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("resp_count_reg ");
    tracep->declBus(c+201,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+203,"p_reset_value",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBit(c+181,"clk",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBit(c+13,"reset",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+171,"q",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBus(c+170,"d",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBit(c+12,"en",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("resp_incrementer ");
    tracep->declBus(c+201,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+205,"p_inc_value",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+171,"in",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->declBus(c+170,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 4,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("way_out_select ");
    tracep->declBus(c+206,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+43,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+46,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBit(c+21,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+47,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("word0_out_final_mux ");
    tracep->declBus(c+206,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+41,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+42,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBit(c+50,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+43,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("word0_out_lower_eight_mux ");
    tracep->declBus(c+206,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+51,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+52,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+53,"in2",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+54,"in3",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+55,"in4",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+56,"in5",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+57,"in6",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+58,"in7",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+59,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 2,0);
    tracep->declBus(c+41,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("word0_out_upper_eight_mux ");
    tracep->declBus(c+206,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+60,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+61,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+62,"in2",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+63,"in3",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+64,"in4",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+65,"in5",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+66,"in6",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+67,"in7",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+59,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 2,0);
    tracep->declBus(c+42,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("word1_out_lower_eight_mux ");
    tracep->declBus(c+206,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+68,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+69,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+70,"in2",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+71,"in3",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+72,"in4",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+73,"in5",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+74,"in6",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+75,"in7",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+59,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 2,0);
    tracep->declBus(c+44,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("word1_out_upper_eight_mux ");
    tracep->declBus(c+206,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+76,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+77,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+78,"in2",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+79,"in3",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+80,"in4",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+81,"in5",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+82,"in6",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+83,"in7",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+59,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 2,0);
    tracep->declBus(c+45,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("word_out_final_mux ");
    tracep->declBus(c+206,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+44,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+45,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBit(c+50,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+46,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("write_data_source_mux ");
    tracep->declBus(c+206,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+96,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBus(c+26,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->declBit(c+14,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+39,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("write_data_word_mux ");
    tracep->declBus(c+204,"p_nbits",-1, FST_VD_IMPLICIT,FST_VT_VCD_PARAMETER, false,-1, 31,0);
    tracep->declBus(c+102,"in0",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 3,0);
    tracep->declBus(c+180,"in1",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1, 3,0);
    tracep->declBit(c+18,"sel",-1,FST_VD_INPUT,FST_VT_VCD_WIRE, false,-1);
    tracep->declBus(c+38,"out",-1,FST_VD_OUTPUT,FST_VT_VCD_WIRE, false,-1, 3,0);
    tracep->popNamePrefix(2);
    tracep->pushNamePrefix("unnamedblk1 ");
    tracep->declBus(c+184,"i",-1, FST_VD_IMPLICIT,FST_VT_SV_INT, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("unnamedblk2 ");
    tracep->declBus(c+27,"i",-1, FST_VD_IMPLICIT,FST_VT_SV_INT, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("unnamedblk3 ");
    tracep->declBus(c+28,"i",-1, FST_VD_IMPLICIT,FST_VT_SV_INT, false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("unnamedblk4 ");
    tracep->declBus(c+29,"i",-1, FST_VD_IMPLICIT,FST_VT_SV_INT, false,-1, 31,0);
    tracep->pushNamePrefix("unnamedblk5 ");
    tracep->declBus(c+30,"j",-1, FST_VD_IMPLICIT,FST_VT_SV_INT, false,-1, 31,0);
    tracep->popNamePrefix(3);
}

VL_ATTR_COLD void Vtop___024root__trace_init_top(Vtop___024root* vlSelf, VerilatedFst* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    Vtop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtop___024root__trace_init_top\n"); );
    // Body
    Vtop___024root__trace_init_sub__TOP__0(vlSelf, tracep);
}

VL_ATTR_COLD void Vtop___024root__trace_full_top_0(void* voidSelf, VerilatedFst::Buffer* bufp);
void Vtop___024root__trace_chg_top_0(void* voidSelf, VerilatedFst::Buffer* bufp);
void Vtop___024root__trace_cleanup(void* voidSelf, VerilatedFst* /*unused*/);

VL_ATTR_COLD void Vtop___024root__trace_register(Vtop___024root* vlSelf, VerilatedFst* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    Vtop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtop___024root__trace_register\n"); );
    // Body
    tracep->addFullCb(&Vtop___024root__trace_full_top_0, vlSelf);
    tracep->addChgCb(&Vtop___024root__trace_chg_top_0, vlSelf);
    tracep->addCleanupCb(&Vtop___024root__trace_cleanup, vlSelf);
}

VL_ATTR_COLD void Vtop___024root__trace_full_sub_0(Vtop___024root* vlSelf, VerilatedFst::Buffer* bufp);

VL_ATTR_COLD void Vtop___024root__trace_full_top_0(void* voidSelf, VerilatedFst::Buffer* bufp) {
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtop___024root__trace_full_top_0\n"); );
    // Init
    Vtop___024root* const __restrict vlSelf VL_ATTR_UNUSED = static_cast<Vtop___024root*>(voidSelf);
    Vtop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    // Body
    Vtop___024root__trace_full_sub_0((&vlSymsp->TOP), bufp);
}

VL_ATTR_COLD void Vtop___024root__trace_full_sub_0(Vtop___024root* vlSelf, VerilatedFst::Buffer* bufp) {
    if (false && vlSelf) {}  // Prevent unused
    Vtop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtop___024root__trace_full_sub_0\n"); );
    // Init
    uint32_t* const oldp VL_ATTR_UNUSED = bufp->oldp(vlSymsp->__Vm_baseCode);
    // Body
    bufp->fullWData(oldp+1,(vlSelf->top__DOT__memreq_msg),77);
    bufp->fullQData(oldp+4,(vlSelf->top__DOT__cache_resp_msg),47);
    bufp->fullBit(oldp+6,(vlSelf->top__DOT__flush));
    bufp->fullBit(oldp+7,(vlSelf->top__DOT__flush_done));
    bufp->fullBit(oldp+8,(vlSelf->top__DOT__input_en));
    bufp->fullBit(oldp+9,(vlSelf->top__DOT__tarray_en));
    bufp->fullBit(oldp+10,(vlSelf->top__DOT__tarray_wen));
    bufp->fullBit(oldp+11,(vlSelf->top__DOT__req_count_en));
    bufp->fullBit(oldp+12,(vlSelf->top__DOT__resp_count_en));
    bufp->fullBit(oldp+13,(vlSelf->top__DOT__count_reset));
    bufp->fullBit(oldp+14,(vlSelf->top__DOT__write_data_sel));
    bufp->fullBit(oldp+15,(vlSelf->top__DOT__darray_en));
    bufp->fullBit(oldp+16,(vlSelf->top__DOT__darray_wen));
    bufp->fullBit(oldp+17,(vlSelf->top__DOT__index_sel));
    bufp->fullBit(oldp+18,(vlSelf->top__DOT__write_word_sel));
    bufp->fullBit(oldp+19,(vlSelf->top__DOT__read_word_sel));
    bufp->fullBit(oldp+20,(vlSelf->top__DOT__mem_action));
    bufp->fullBit(oldp+21,(vlSelf->top__DOT__way_select));
    bufp->fullBit(oldp+22,(vlSelf->top__DOT__clean_set));
    bufp->fullBit(oldp+23,(vlSelf->top__DOT__dirty_set));
    bufp->fullBit(oldp+24,(vlSelf->top__DOT__valid_set));
    bufp->fullCData(oldp+25,(vlSelf->top__DOT__state),3);
    bufp->fullIData(oldp+26,((IData)(vlSelf->top__DOT__cache_resp_msg)),32);
    bufp->fullIData(oldp+27,(vlSelf->top__DOT__unnamedblk2__DOT__i),32);
    bufp->fullIData(oldp+28,(vlSelf->top__DOT__unnamedblk3__DOT__i),32);
    bufp->fullIData(oldp+29,(vlSelf->top__DOT__unnamedblk4__DOT__i),32);
    bufp->fullIData(oldp+30,(vlSelf->top__DOT__unnamedblk4__DOT__unnamedblk5__DOT__j),32);
    bufp->fullQData(oldp+31,(vlSelf->top__DOT__memresp_msg),47);
    bufp->fullWData(oldp+33,(vlSelf->top__DOT__cache_req_msg),77);
    bufp->fullIData(oldp+36,((vlSelf->top__DOT__DUT__DOT__req_addr_mem 
                              >> 0xbU)),21);
    bufp->fullCData(oldp+37,(vlSelf->top__DOT__DUT__DOT__d_index),5);
    bufp->fullCData(oldp+38,(vlSelf->top__DOT__DUT__DOT__write_word_offset),4);
    bufp->fullIData(oldp+39,(vlSelf->top__DOT__DUT__DOT__write_data),32);
    bufp->fullCData(oldp+40,(vlSelf->top__DOT__DUT__DOT__read_word_offset),4);
    bufp->fullIData(oldp+41,(vlSelf->top__DOT__DUT__DOT__word0_out_lower),32);
    bufp->fullIData(oldp+42,(vlSelf->top__DOT__DUT__DOT__word0_out_upper),32);
    bufp->fullIData(oldp+43,(vlSelf->top__DOT__DUT__DOT__data0_word_mux_out),32);
    bufp->fullIData(oldp+44,(vlSelf->top__DOT__DUT__DOT__word1_out_lower),32);
    bufp->fullIData(oldp+45,(vlSelf->top__DOT__DUT__DOT__word1_out_upper),32);
    bufp->fullIData(oldp+46,(vlSelf->top__DOT__DUT__DOT__data1_word_mux_out),32);
    bufp->fullIData(oldp+47,(vlSelf->top__DOT__DUT__DOT__way_data_out),32);
    bufp->fullIData(oldp+48,(vlSelf->top__DOT__DUT__DOT__cache_data_out),32);
    bufp->fullIData(oldp+49,(vlSelf->top__DOT__DUT__DOT__req_addr_mem),32);
    bufp->fullBit(oldp+50,((1U & ((IData)(vlSelf->top__DOT__DUT__DOT__read_word_offset) 
                                  >> 3U))));
    bufp->fullIData(oldp+51,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_lower_eight_mux__in0),32);
    bufp->fullIData(oldp+52,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_lower_eight_mux__in1),32);
    bufp->fullIData(oldp+53,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_lower_eight_mux__in2),32);
    bufp->fullIData(oldp+54,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_lower_eight_mux__in3),32);
    bufp->fullIData(oldp+55,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_lower_eight_mux__in4),32);
    bufp->fullIData(oldp+56,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_lower_eight_mux__in5),32);
    bufp->fullIData(oldp+57,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_lower_eight_mux__in6),32);
    bufp->fullIData(oldp+58,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_lower_eight_mux__in7),32);
    bufp->fullCData(oldp+59,((7U & (IData)(vlSelf->top__DOT__DUT__DOT__read_word_offset))),3);
    bufp->fullIData(oldp+60,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_upper_eight_mux__in0),32);
    bufp->fullIData(oldp+61,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_upper_eight_mux__in1),32);
    bufp->fullIData(oldp+62,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_upper_eight_mux__in2),32);
    bufp->fullIData(oldp+63,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_upper_eight_mux__in3),32);
    bufp->fullIData(oldp+64,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_upper_eight_mux__in4),32);
    bufp->fullIData(oldp+65,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_upper_eight_mux__in5),32);
    bufp->fullIData(oldp+66,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_upper_eight_mux__in6),32);
    bufp->fullIData(oldp+67,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word0_out_upper_eight_mux__in7),32);
    bufp->fullIData(oldp+68,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_lower_eight_mux__in0),32);
    bufp->fullIData(oldp+69,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_lower_eight_mux__in1),32);
    bufp->fullIData(oldp+70,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_lower_eight_mux__in2),32);
    bufp->fullIData(oldp+71,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_lower_eight_mux__in3),32);
    bufp->fullIData(oldp+72,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_lower_eight_mux__in4),32);
    bufp->fullIData(oldp+73,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_lower_eight_mux__in5),32);
    bufp->fullIData(oldp+74,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_lower_eight_mux__in6),32);
    bufp->fullIData(oldp+75,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_lower_eight_mux__in7),32);
    bufp->fullIData(oldp+76,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_upper_eight_mux__in0),32);
    bufp->fullIData(oldp+77,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_upper_eight_mux__in1),32);
    bufp->fullIData(oldp+78,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_upper_eight_mux__in2),32);
    bufp->fullIData(oldp+79,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_upper_eight_mux__in3),32);
    bufp->fullIData(oldp+80,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_upper_eight_mux__in4),32);
    bufp->fullIData(oldp+81,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_upper_eight_mux__in5),32);
    bufp->fullIData(oldp+82,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_upper_eight_mux__in6),32);
    bufp->fullIData(oldp+83,(vlSelf->top__DOT__DUT__DOT____Vcellinp__word1_out_upper_eight_mux__in7),32);
    bufp->fullBit(oldp+84,(vlSelf->top__DOT__all_flushed));
    bufp->fullBit(oldp+85,(vlSelf->top__DOT__tarray0_match));
    bufp->fullBit(oldp+86,(vlSelf->top__DOT__tarray1_match));
    bufp->fullBit(oldp+87,(vlSelf->top__DOT__line0_dirty));
    bufp->fullBit(oldp+88,(vlSelf->top__DOT__line1_dirty));
    bufp->fullBit(oldp+89,(vlSelf->top__DOT__line0_valid));
    bufp->fullBit(oldp+90,(vlSelf->top__DOT__line1_valid));
    bufp->fullBit(oldp+91,((1U & (vlSelf->top__DOT__DUT__DOT__incoming_msg[2U] 
                                  >> 0xaU))));
    bufp->fullBit(oldp+92,((0x10U == (IData)(vlSelf->top__DOT__DUT__DOT__req_word))));
    bufp->fullBit(oldp+93,((0x10U == (IData)(vlSelf->top__DOT__DUT__DOT__resp_word))));
    bufp->fullBit(oldp+94,((0U == vlSelf->top__DOT__DUT__DOT__dirty0)));
    bufp->fullIData(oldp+95,(((vlSelf->top__DOT__DUT__DOT__incoming_msg[2U] 
                               << 0x1eU) | (vlSelf->top__DOT__DUT__DOT__incoming_msg[1U] 
                                            >> 2U))),32);
    bufp->fullIData(oldp+96,(vlSelf->top__DOT__DUT__DOT__incoming_msg[0U]),32);
    bufp->fullWData(oldp+97,(vlSelf->top__DOT__DUT__DOT__incoming_msg),77);
    bufp->fullIData(oldp+100,((0x1fffffU & ((vlSelf->top__DOT__DUT__DOT__incoming_msg[2U] 
                                             << 0x13U) 
                                            | (vlSelf->top__DOT__DUT__DOT__incoming_msg[1U] 
                                               >> 0xdU)))),21);
    bufp->fullCData(oldp+101,((0x1fU & (vlSelf->top__DOT__DUT__DOT__incoming_msg[1U] 
                                        >> 8U))),5);
    bufp->fullCData(oldp+102,((0xfU & (vlSelf->top__DOT__DUT__DOT__incoming_msg[1U] 
                                       >> 4U))),4);
    bufp->fullIData(oldp+103,(vlSelf->top__DOT__DUT__DOT__tag0[0]),21);
    bufp->fullIData(oldp+104,(vlSelf->top__DOT__DUT__DOT__tag0[1]),21);
    bufp->fullIData(oldp+105,(vlSelf->top__DOT__DUT__DOT__tag0[2]),21);
    bufp->fullIData(oldp+106,(vlSelf->top__DOT__DUT__DOT__tag0[3]),21);
    bufp->fullIData(oldp+107,(vlSelf->top__DOT__DUT__DOT__tag0[4]),21);
    bufp->fullIData(oldp+108,(vlSelf->top__DOT__DUT__DOT__tag0[5]),21);
    bufp->fullIData(oldp+109,(vlSelf->top__DOT__DUT__DOT__tag0[6]),21);
    bufp->fullIData(oldp+110,(vlSelf->top__DOT__DUT__DOT__tag0[7]),21);
    bufp->fullIData(oldp+111,(vlSelf->top__DOT__DUT__DOT__tag0[8]),21);
    bufp->fullIData(oldp+112,(vlSelf->top__DOT__DUT__DOT__tag0[9]),21);
    bufp->fullIData(oldp+113,(vlSelf->top__DOT__DUT__DOT__tag0[10]),21);
    bufp->fullIData(oldp+114,(vlSelf->top__DOT__DUT__DOT__tag0[11]),21);
    bufp->fullIData(oldp+115,(vlSelf->top__DOT__DUT__DOT__tag0[12]),21);
    bufp->fullIData(oldp+116,(vlSelf->top__DOT__DUT__DOT__tag0[13]),21);
    bufp->fullIData(oldp+117,(vlSelf->top__DOT__DUT__DOT__tag0[14]),21);
    bufp->fullIData(oldp+118,(vlSelf->top__DOT__DUT__DOT__tag0[15]),21);
    bufp->fullIData(oldp+119,(vlSelf->top__DOT__DUT__DOT__tag0[16]),21);
    bufp->fullIData(oldp+120,(vlSelf->top__DOT__DUT__DOT__tag0[17]),21);
    bufp->fullIData(oldp+121,(vlSelf->top__DOT__DUT__DOT__tag0[18]),21);
    bufp->fullIData(oldp+122,(vlSelf->top__DOT__DUT__DOT__tag0[19]),21);
    bufp->fullIData(oldp+123,(vlSelf->top__DOT__DUT__DOT__tag0[20]),21);
    bufp->fullIData(oldp+124,(vlSelf->top__DOT__DUT__DOT__tag0[21]),21);
    bufp->fullIData(oldp+125,(vlSelf->top__DOT__DUT__DOT__tag0[22]),21);
    bufp->fullIData(oldp+126,(vlSelf->top__DOT__DUT__DOT__tag0[23]),21);
    bufp->fullIData(oldp+127,(vlSelf->top__DOT__DUT__DOT__tag0[24]),21);
    bufp->fullIData(oldp+128,(vlSelf->top__DOT__DUT__DOT__tag0[25]),21);
    bufp->fullIData(oldp+129,(vlSelf->top__DOT__DUT__DOT__tag0[26]),21);
    bufp->fullIData(oldp+130,(vlSelf->top__DOT__DUT__DOT__tag0[27]),21);
    bufp->fullIData(oldp+131,(vlSelf->top__DOT__DUT__DOT__tag0[28]),21);
    bufp->fullIData(oldp+132,(vlSelf->top__DOT__DUT__DOT__tag0[29]),21);
    bufp->fullIData(oldp+133,(vlSelf->top__DOT__DUT__DOT__tag0[30]),21);
    bufp->fullIData(oldp+134,(vlSelf->top__DOT__DUT__DOT__tag0[31]),21);
    bufp->fullIData(oldp+135,(vlSelf->top__DOT__DUT__DOT__tag1[0]),21);
    bufp->fullIData(oldp+136,(vlSelf->top__DOT__DUT__DOT__tag1[1]),21);
    bufp->fullIData(oldp+137,(vlSelf->top__DOT__DUT__DOT__tag1[2]),21);
    bufp->fullIData(oldp+138,(vlSelf->top__DOT__DUT__DOT__tag1[3]),21);
    bufp->fullIData(oldp+139,(vlSelf->top__DOT__DUT__DOT__tag1[4]),21);
    bufp->fullIData(oldp+140,(vlSelf->top__DOT__DUT__DOT__tag1[5]),21);
    bufp->fullIData(oldp+141,(vlSelf->top__DOT__DUT__DOT__tag1[6]),21);
    bufp->fullIData(oldp+142,(vlSelf->top__DOT__DUT__DOT__tag1[7]),21);
    bufp->fullIData(oldp+143,(vlSelf->top__DOT__DUT__DOT__tag1[8]),21);
    bufp->fullIData(oldp+144,(vlSelf->top__DOT__DUT__DOT__tag1[9]),21);
    bufp->fullIData(oldp+145,(vlSelf->top__DOT__DUT__DOT__tag1[10]),21);
    bufp->fullIData(oldp+146,(vlSelf->top__DOT__DUT__DOT__tag1[11]),21);
    bufp->fullIData(oldp+147,(vlSelf->top__DOT__DUT__DOT__tag1[12]),21);
    bufp->fullIData(oldp+148,(vlSelf->top__DOT__DUT__DOT__tag1[13]),21);
    bufp->fullIData(oldp+149,(vlSelf->top__DOT__DUT__DOT__tag1[14]),21);
    bufp->fullIData(oldp+150,(vlSelf->top__DOT__DUT__DOT__tag1[15]),21);
    bufp->fullIData(oldp+151,(vlSelf->top__DOT__DUT__DOT__tag1[16]),21);
    bufp->fullIData(oldp+152,(vlSelf->top__DOT__DUT__DOT__tag1[17]),21);
    bufp->fullIData(oldp+153,(vlSelf->top__DOT__DUT__DOT__tag1[18]),21);
    bufp->fullIData(oldp+154,(vlSelf->top__DOT__DUT__DOT__tag1[19]),21);
    bufp->fullIData(oldp+155,(vlSelf->top__DOT__DUT__DOT__tag1[20]),21);
    bufp->fullIData(oldp+156,(vlSelf->top__DOT__DUT__DOT__tag1[21]),21);
    bufp->fullIData(oldp+157,(vlSelf->top__DOT__DUT__DOT__tag1[22]),21);
    bufp->fullIData(oldp+158,(vlSelf->top__DOT__DUT__DOT__tag1[23]),21);
    bufp->fullIData(oldp+159,(vlSelf->top__DOT__DUT__DOT__tag1[24]),21);
    bufp->fullIData(oldp+160,(vlSelf->top__DOT__DUT__DOT__tag1[25]),21);
    bufp->fullIData(oldp+161,(vlSelf->top__DOT__DUT__DOT__tag1[26]),21);
    bufp->fullIData(oldp+162,(vlSelf->top__DOT__DUT__DOT__tag1[27]),21);
    bufp->fullIData(oldp+163,(vlSelf->top__DOT__DUT__DOT__tag1[28]),21);
    bufp->fullIData(oldp+164,(vlSelf->top__DOT__DUT__DOT__tag1[29]),21);
    bufp->fullIData(oldp+165,(vlSelf->top__DOT__DUT__DOT__tag1[30]),21);
    bufp->fullIData(oldp+166,(vlSelf->top__DOT__DUT__DOT__tag1[31]),21);
    bufp->fullCData(oldp+167,(vlSelf->top__DOT__DUT__DOT__flush_index),5);
    bufp->fullCData(oldp+168,((0x1fU & ((IData)(1U) 
                                        + (IData)(vlSelf->top__DOT__DUT__DOT__req_word)))),5);
    bufp->fullCData(oldp+169,(vlSelf->top__DOT__DUT__DOT__req_word),5);
    bufp->fullCData(oldp+170,((0x1fU & ((IData)(1U) 
                                        + (IData)(vlSelf->top__DOT__DUT__DOT__resp_word)))),5);
    bufp->fullCData(oldp+171,(vlSelf->top__DOT__DUT__DOT__resp_word),5);
    bufp->fullIData(oldp+172,(vlSelf->top__DOT__DUT__DOT__dirty0),32);
    bufp->fullIData(oldp+173,(vlSelf->top__DOT__DUT__DOT__dirty1),32);
    bufp->fullIData(oldp+174,(vlSelf->top__DOT__DUT__DOT__valid0),32);
    bufp->fullIData(oldp+175,(vlSelf->top__DOT__DUT__DOT__valid1),32);
    bufp->fullBit(oldp+176,((0U == vlSelf->top__DOT__DUT__DOT__dirty1)));
    bufp->fullCData(oldp+177,(vlSelf->top__DOT__DUT__DOT__flush0_index),5);
    bufp->fullCData(oldp+178,(vlSelf->top__DOT__DUT__DOT__flush1_index),5);
    bufp->fullCData(oldp+179,((0xfU & (IData)(vlSelf->top__DOT__DUT__DOT__req_word))),4);
    bufp->fullCData(oldp+180,((0xfU & (IData)(vlSelf->top__DOT__DUT__DOT__resp_word))),4);
    bufp->fullBit(oldp+181,(vlSelf->clk));
    bufp->fullBit(oldp+182,(vlSelf->linetrace));
    bufp->fullBit(oldp+183,(vlSelf->top__DOT__reset));
    bufp->fullIData(oldp+184,(vlSelf->top__DOT__unnamedblk1__DOT__i),32);
    bufp->fullBit(oldp+185,(vlSelf->top__DOT__memreq_val));
    bufp->fullBit(oldp+186,(vlSelf->top__DOT__memreq_rdy));
    bufp->fullBit(oldp+187,(vlSelf->top__DOT__memresp_val));
    bufp->fullBit(oldp+188,(vlSelf->top__DOT__memresp_rdy));
    bufp->fullBit(oldp+189,(vlSelf->top__DOT__cache_req_val));
    bufp->fullBit(oldp+190,(vlSelf->top__DOT__cache_req_rdy));
    bufp->fullBit(oldp+191,(vlSelf->top__DOT__cache_resp_val));
    bufp->fullBit(oldp+192,(vlSelf->top__DOT__cache_resp_rdy));
    bufp->fullBit(oldp+193,(1U));
    bufp->fullBit(oldp+194,(0U));
    bufp->fullCData(oldp+195,(0U),3);
    bufp->fullCData(oldp+196,(1U),3);
    bufp->fullCData(oldp+197,(2U),3);
    bufp->fullCData(oldp+198,(3U),3);
    bufp->fullCData(oldp+199,(4U),3);
    bufp->fullCData(oldp+200,(5U),3);
    bufp->fullIData(oldp+201,(5U),32);
    bufp->fullIData(oldp+202,(0x4dU),32);
    bufp->fullIData(oldp+203,(0U),32);
    bufp->fullIData(oldp+204,(4U),32);
    bufp->fullIData(oldp+205,(1U),32);
    bufp->fullIData(oldp+206,(0x20U),32);
}
